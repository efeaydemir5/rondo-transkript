name: Generate Transcript TXT Only

on:
  workflow_dispatch:
    inputs:
      limit:
        description: "Ölçü limiti (all, -1 ya da pozitif sayı). Tüm parça için 'all' kullanın."
        required: false
        default: "all"
      commit:
        description: "Değişiklikleri commit et (true/false)"
        required: false
        default: "true"

permissions:
  contents: write

jobs:
  gen-txt:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Python kur
        uses: actions/setup-python@v5
        with:
          python-version: "3.x"

      - name: (Opsiyonel) Bağımlılık yükle
        if: hashFiles('requirements.txt') != ''
        run: |
          pip install -r requirements.txt

      - name: Yapı / Debug liste
        run: |
          set -e
          echo "Çalışma dizini (pwd):"; pwd
          echo "--- Root içerik ---"; ls -al
          echo "--- İlk 3 seviye (script ve xml araması) ---"
          find . -maxdepth 3 -type f \( -name "generate_transcript.py" -o -name "HAHA.musicxml" \)

      - name: Script çalıştır
        id: runscript
        run: |
          set -euo pipefail
          echo "Script ve MusicXML otomatik tespiti..."
          SCRIPT_PATH=$(find . -maxdepth 6 -type f -name "generate_transcript.py" | head -n1 || true)
          if [ -z "${SCRIPT_PATH}" ]; then
            echo "HATA: generate_transcript.py bulunamadı. scripts/ klasörünün gerçekten commit edildiğinden emin ol." >&2
            exit 1
          fi
          MUSICXML_PATH=$(find . -maxdepth 6 -type f -name "HAHA.musicxml" | head -n1 || true)
          if [ -z "${MUSICXML_PATH}" ]; then
            echo "HATA: HAHA.musicxml bulunamadı (repo köküne ya da alt dizinlerden birine ekleyin)." >&2
            exit 1
          fi

          echo "Bulunan script   : ${SCRIPT_PATH}"
          echo "Bulunan MusicXML : ${MUSICXML_PATH}"
          echo "Limit (girdi)    : ${{ github.event.inputs.limit }}"

          # Limit parametresi destekleyen eski script için:
          # - all veya -1 tam parça
          # Limit parametresini okumayan yeni scriptler için ek argüman zararsızdır (yok sayılır).
          python "${SCRIPT_PATH}" "${MUSICXML_PATH}" "${{ github.event.inputs.limit }}"

          # Olası çıktı dosya adları
          CANDIDATES=("transcript_rh.txt" "transcript_full.txt")
          OUT_TXT=""
          for f in "${CANDIDATES[@]}"; do
            if [ -f "$f" ]; then
              OUT_TXT="$f"
              break
            fi
          done

          if [ -z "$OUT_TXT" ]; then
            echo "HATA: Beklenen çıktı dosyası bulunamadı. Script hangi ada yazıyor kontrol edin (transcript_rh.txt veya transcript_full.txt)." >&2
            ls -al
            exit 2
          fi

          echo "Çıktı dosyası: $OUT_TXT"
          echo "---- ${OUT_TXT} (ilk 25 satır) ----"
          head -n 25 "$OUT_TXT" || true
          echo "-----------------------------------"

          echo "out_txt=${OUT_TXT}" >> $GITHUB_OUTPUT

      - name: Değişiklik kontrol
        id: diffcheck
        run: |
          OUT_TXT="${{ steps.runscript.outputs.out_txt }}"
          if [ -z "$OUT_TXT" ]; then
            echo "HATA: OUT_TXT boş." >&2
            exit 1
          fi
          if [ -n "$(git status --porcelain "$OUT_TXT")" ]; then
            echo "changed=true" >> $GITHUB_OUTPUT
            echo "$OUT_TXT değişmiş."
          else
            echo "changed=false" >> $GITHUB_OUTPUT
            echo "Değişiklik yok (commit atlanacak)."
          fi

      - name: Commit & push
        if: steps.diffcheck.outputs.changed == 'true' && github.event.inputs.commit == 'true'
        run: |
          set -e
          OUT_TXT="${{ steps.runscript.outputs.out_txt }}"
          git config user.name "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git add "$OUT_TXT"
          git commit -m "chore: auto-generate ${OUT_TXT} (limit=${{ github.event.inputs.limit }})"
          git push
          echo "Commit ve push tamam."

      - name: Artifact yükle
        uses: actions/upload-artifact@v4
        with:
          name: transcript_txt
          path: ${{ steps.runscript.outputs.out_txt }}
          if-no-files-found: error
